// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE
'use strict';

var Block          = require("bs-platform/lib/js/block.js");
var Curry          = require("bs-platform/lib/js/curry.js");
var ReasonReact    = require("reason-react/lib/js/src/reasonReact.js");
var StackNavigator = require("./stackNavigator.js");

function Make(Impl) {
  var component = ReasonReact.reducerComponent("StatefullStackNavigator");
  var StackNavigator$1 = StackNavigator.Make(/* module */[]);
  var make = function (getHeaderConfig, render) {
    var newrecord = component.slice();
    newrecord[/* render */9] = (function (param) {
        var reduce = param[/* reduce */3];
        var eta = Curry._4(StackNavigator$1[/* make */16], param[/* state */4], Curry._1(render, Curry._1(reduce, (function (screen) {
                        return /* Push */[screen];
                      }))), getHeaderConfig, Curry._1(reduce, (function () {
                    return /* Pop */0;
                  })));
        return ReasonReact.element(/* None */0, /* None */0, eta);
      });
    newrecord[/* initialState */10] = (function () {
        return /* :: */[
                Impl[/* initialScreen */0],
                /* [] */0
              ];
      });
    newrecord[/* reducer */12] = (function (action, state) {
        if (action) {
          return /* Update */Block.__(0, [/* :: */[
                      action[0],
                      state
                    ]]);
        } else if (state) {
          return /* Update */Block.__(0, [state[1]]);
        } else {
          return /* NoUpdate */0;
        }
      });
    return newrecord;
  };
  return /* module */[
          /* component */component,
          /* StackNavigator */StackNavigator$1,
          /* make */make
        ];
}

exports.Make = Make;
/* ReasonReact Not a pure module */
